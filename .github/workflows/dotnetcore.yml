name: MsccGenerativeAI

on:
  push:
    paths:
      - '**'
      - '!**.md'
      - '!docs/**'
      - '!samples/**'
      - '!tests/**'
      - '!LICENSE'
    branches:
      - main
  pull_request:
    branches:
      - main

#permissions: {}

jobs:
  build:
    name: Build, pack and push to GitHub Package Registry (GPR)
    strategy:
      matrix:
        os: [ubuntu-latest]
        dotnet-version: ['8.x']
    runs-on: ${{ matrix.os }}

#    permissions: 
#      contents: read
#      packages: write
#      id-token: write

    steps:
    - name: enable windows longpaths
      run: |
        git config --global core.longpaths true
    - name: Check-out latest sources 
      uses: actions/checkout@v4

    - name: Install Cosign
      uses: sigstore/cosign-installer@v3.6.0
    - name: Check Cosign install!
      run: cosign version

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        source-url: https://nuget.pkg.github.com/mscraftsman/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Build
      run: |
        dotnet build ./GenerativeAI.sln -c Release
    # - name: Test Mscc.GenerativeAI
    #   run: |
    #     dotnet test ./tests/Mscc.GenerativeAI/Test.Mscc.GenerativeAI.csproj -c Release --logger "console;verbosity=detailed"
    # - name: Test Mscc.GenerativeAI.Google
    #   run: |
    #     dotnet test ./tests/Mscc.GenerativeAI.Google/Test.Mscc.GenerativeAI.Google.csproj -c Release --logger "console;verbosity=detailed"
    - name: Pack for .NET
      run: |
        dotnet pack -c Release ./src/Mscc.GenerativeAI/Mscc.GenerativeAI.csproj -o output/
    - name: Pack for ASP.NET Core
      run: |
        dotnet pack -c Release ./src/Mscc.GenerativeAI.Web/Mscc.GenerativeAI.Web.csproj -o output/
    - name: Pack for .NET using Google Cloud Client Library
      run: |
        dotnet pack -c Release ./src/Mscc.GenerativeAI.Google/Mscc.GenerativeAI.Google.csproj -o output/
    - name: Pack for Microsoft.Extension.AI and Microsoft Semantic Kernel
      run: |
        dotnet pack -c Release ./src/Mscc.GenerativeAI.Microsoft/Mscc.GenerativeAI.Microsoft.csproj -o output/
    - name: Push to GitHub Package Registry (GPR)
      run: |
        dotnet nuget push output/*.nupkg --skip-duplicate
